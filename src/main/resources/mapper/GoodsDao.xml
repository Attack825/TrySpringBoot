<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tryspringboot.dao.GoodsDao">
    <resultMap id="BaseResultMap" type="com.example.tryspringboot.model.entity.Goods">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="delete_at" jdbcType="TIMESTAMP" property="deleteAt"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="old_price" jdbcType="DECIMAL" property="oldPrice"/>
        <result column="new_price" jdbcType="DECIMAL" property="newPrice"/>
        <result column="discount" jdbcType="DECIMAL" property="discount"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="sales" jdbcType="INTEGER" property="sales"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="content" jdbcType="VARCHAR" property="content"/>
        <result column="img_list" jdbcType="VARCHAR" property="imgList"/>
        <result column="certificate_possessor" jdbcType="VARCHAR" property="certificatePossessor"/>
        <result column="category_id" jdbcType="VARCHAR" property="categoryId"/>
        <result column="certificate_id" jdbcType="VARCHAR" property="certificateId"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="is_effective" jdbcType="INTEGER" property="isEffective"/>
    </resultMap>
    <sql id="Base_Column_List">
        <if test="true">
            id, uuid, create_at, update_at, delete_at, `name`, old_price, new_price, discount,
            stock, sales, title, content, img_list, certificate_possessor, category_id, certificate_id,
            address, is_effective
        </if>
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from goods
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.tryspringboot.model.entity.Goods"
            useGeneratedKeys="true">
        insert into goods (uuid, create_at, update_at,
                           delete_at, `name`, old_price,
                           new_price, discount, stock,
                           sales, title, content,
                           img_list, certificate_possessor, category_id,
                           certificate_id, address, is_effective)
        values (#{uuid,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP},
                #{deleteAt,jdbcType=TIMESTAMP}, #{name,jdbcType=VARCHAR}, #{oldPrice,jdbcType=DECIMAL},
                #{newPrice,jdbcType=DECIMAL}, #{discount,jdbcType=DECIMAL}, #{stock,jdbcType=INTEGER},
                #{sales,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR},
                #{imgList,jdbcType=VARCHAR}, #{certificatePossessor,jdbcType=VARCHAR}, #{categoryId,jdbcType=VARCHAR},
                #{certificateId,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{isEffective,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.tryspringboot.model.entity.Goods" useGeneratedKeys="true">
        insert into goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="deleteAt != null">
                delete_at,
            </if>
            <if test="name != null">
                `name`,
            </if>
            <if test="oldPrice != null">
                old_price,
            </if>
            <if test="newPrice != null">
                new_price,
            </if>
            <if test="discount != null">
                discount,
            </if>
            <if test="stock != null">
                stock,
            </if>
            <if test="sales != null">
                sales,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="content != null">
                content,
            </if>
            <if test="imgList != null">
                img_list,
            </if>
            <if test="certificatePossessor != null">
                certificate_possessor,
            </if>
            <if test="categoryId != null">
                category_id,
            </if>
            <if test="certificateId != null">
                certificate_id,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="isEffective != null">
                is_effective,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteAt != null">
                #{deleteAt,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="oldPrice != null">
                #{oldPrice,jdbcType=DECIMAL},
            </if>
            <if test="newPrice != null">
                #{newPrice,jdbcType=DECIMAL},
            </if>
            <if test="discount != null">
                #{discount,jdbcType=DECIMAL},
            </if>
            <if test="stock != null">
                #{stock,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                #{sales,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                #{content,jdbcType=VARCHAR},
            </if>
            <if test="imgList != null">
                #{imgList,jdbcType=VARCHAR},
            </if>
            <if test="certificatePossessor != null">
                #{certificatePossessor,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                #{categoryId,jdbcType=VARCHAR},
            </if>
            <if test="certificateId != null">
                #{certificateId,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="isEffective != null">
                #{isEffective,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.tryspringboot.model.entity.Goods">
        update goods
        <set>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="deleteAt != null">
                delete_at = #{deleteAt,jdbcType=TIMESTAMP},
            </if>
            <if test="name != null">
                `name` = #{name,jdbcType=VARCHAR},
            </if>
            <if test="oldPrice != null">
                old_price = #{oldPrice,jdbcType=DECIMAL},
            </if>
            <if test="newPrice != null">
                new_price = #{newPrice,jdbcType=DECIMAL},
            </if>
            <if test="discount != null">
                discount = #{discount,jdbcType=DECIMAL},
            </if>
            <if test="stock != null">
                stock = #{stock,jdbcType=INTEGER},
            </if>
            <if test="sales != null">
                sales = #{sales,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="content != null">
                content = #{content,jdbcType=VARCHAR},
            </if>
            <if test="imgList != null">
                img_list = #{imgList,jdbcType=VARCHAR},
            </if>
            <if test="certificatePossessor != null">
                certificate_possessor = #{certificatePossessor,jdbcType=VARCHAR},
            </if>
            <if test="categoryId != null">
                category_id = #{categoryId,jdbcType=VARCHAR},
            </if>
            <if test="certificateId != null">
                certificate_id = #{certificateId,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="isEffective != null">
                is_effective = #{isEffective,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.tryspringboot.model.entity.Goods">
        update goods
        set uuid                  = #{uuid,jdbcType=VARCHAR},
            create_at             = #{createAt,jdbcType=TIMESTAMP},
            update_at             = #{updateAt,jdbcType=TIMESTAMP},
            delete_at             = #{deleteAt,jdbcType=TIMESTAMP},
            `name`                = #{name,jdbcType=VARCHAR},
            old_price             = #{oldPrice,jdbcType=DECIMAL},
            new_price             = #{newPrice,jdbcType=DECIMAL},
            discount              = #{discount,jdbcType=DECIMAL},
            stock                 = #{stock,jdbcType=INTEGER},
            sales                 = #{sales,jdbcType=INTEGER},
            title                 = #{title,jdbcType=VARCHAR},
            content               = #{content,jdbcType=VARCHAR},
            img_list              = #{imgList,jdbcType=VARCHAR},
            certificate_possessor = #{certificatePossessor,jdbcType=VARCHAR},
            category_id           = #{categoryId,jdbcType=VARCHAR},
            certificate_id        = #{certificateId,jdbcType=VARCHAR},
            address               = #{address,jdbcType=VARCHAR},
            is_effective          = #{isEffective,jdbcType=INTEGER}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByCategoryId" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from goods
        where category_id = #{categoryId,jdbcType=VARCHAR}
    </select>
</mapper>