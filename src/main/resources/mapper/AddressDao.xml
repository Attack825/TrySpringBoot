<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.tryspringboot.dao.AddressDao">
    <resultMap id="BaseResultMap" type="com.example.tryspringboot.model.entity.Address">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="uuid" jdbcType="VARCHAR" property="uuid"/>
        <result column="create_at" jdbcType="TIMESTAMP" property="createAt"/>
        <result column="update_at" jdbcType="TIMESTAMP" property="updateAt"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="receiver" jdbcType="VARCHAR" property="receiver"/>
        <result column="contact" jdbcType="VARCHAR" property="contact"/>
        <result column="province_code" jdbcType="VARCHAR" property="provinceCode"/>
        <result column="city_code" jdbcType="VARCHAR" property="cityCode"/>
        <result column="county_code" jdbcType="VARCHAR" property="countyCode"/>
        <result column="address" jdbcType="VARCHAR" property="address"/>
        <result column="postal_code" jdbcType="VARCHAR" property="postalCode"/>
        <result column="address_tags" jdbcType="VARCHAR" property="addressTags"/>
        <result column="is_default" jdbcType="TINYINT" property="isDefault"/>
        <result column="full_location" jdbcType="VARCHAR" property="fullLocation"/>
    </resultMap>
    <sql id="Base_Column_List">
        <if test="true">
            id, uuid, create_at, update_at, user_id, receiver, contact, province_code, city_code,
            county_code, address, postal_code, address_tags, is_default, full_location
        </if>
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from address
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete
        from address
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.tryspringboot.model.entity.Address"
            useGeneratedKeys="true">
        insert into address (uuid, create_at, update_at,
                             user_id, receiver, contact,
                             province_code, city_code, county_code,
                             address, postal_code, address_tags,
                             is_default, full_location)
        values (#{uuid,jdbcType=VARCHAR}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP},
                #{userId,jdbcType=BIGINT}, #{receiver,jdbcType=VARCHAR}, #{contact,jdbcType=VARCHAR},
                #{provinceCode,jdbcType=VARCHAR}, #{cityCode,jdbcType=VARCHAR}, #{countyCode,jdbcType=VARCHAR},
                #{address,jdbcType=VARCHAR}, #{postalCode,jdbcType=VARCHAR}, #{addressTags,jdbcType=VARCHAR},
                #{isDefault,jdbcType=TINYINT}, #{fullLocation,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" keyColumn="id" keyProperty="id"
            parameterType="com.example.tryspringboot.model.entity.Address" useGeneratedKeys="true">
        insert into address
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="createAt != null">
                create_at,
            </if>
            <if test="updateAt != null">
                update_at,
            </if>
            <if test="userId != null">
                user_id,
            </if>
            <if test="receiver != null">
                receiver,
            </if>
            <if test="contact != null">
                contact,
            </if>
            <if test="provinceCode != null">
                province_code,
            </if>
            <if test="cityCode != null">
                city_code,
            </if>
            <if test="countyCode != null">
                county_code,
            </if>
            <if test="address != null">
                address,
            </if>
            <if test="postalCode != null">
                postal_code,
            </if>
            <if test="addressTags != null">
                address_tags,
            </if>
            <if test="isDefault != null">
                is_default,
            </if>
            <if test="fullLocation != null">
                full_location,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="receiver != null">
                #{receiver,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="provinceCode != null">
                #{provinceCode,jdbcType=VARCHAR},
            </if>
            <if test="cityCode != null">
                #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="countyCode != null">
                #{countyCode,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="postalCode != null">
                #{postalCode,jdbcType=VARCHAR},
            </if>
            <if test="addressTags != null">
                #{addressTags,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="fullLocation != null">
                #{fullLocation,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.example.tryspringboot.model.entity.Address">
        update address
        <set>
            <if test="uuid != null">
                uuid = #{uuid,jdbcType=VARCHAR},
            </if>
            <if test="createAt != null">
                create_at = #{createAt,jdbcType=TIMESTAMP},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt,jdbcType=TIMESTAMP},
            </if>
            <if test="userId != null">
                user_id = #{userId,jdbcType=BIGINT},
            </if>
            <if test="receiver != null">
                receiver = #{receiver,jdbcType=VARCHAR},
            </if>
            <if test="contact != null">
                contact = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="provinceCode != null">
                province_code = #{provinceCode,jdbcType=VARCHAR},
            </if>
            <if test="cityCode != null">
                city_code = #{cityCode,jdbcType=VARCHAR},
            </if>
            <if test="countyCode != null">
                county_code = #{countyCode,jdbcType=VARCHAR},
            </if>
            <if test="address != null">
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="postalCode != null">
                postal_code = #{postalCode,jdbcType=VARCHAR},
            </if>
            <if test="addressTags != null">
                address_tags = #{addressTags,jdbcType=VARCHAR},
            </if>
            <if test="isDefault != null">
                is_default = #{isDefault,jdbcType=TINYINT},
            </if>
            <if test="fullLocation != null">
                full_location = #{fullLocation,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.example.tryspringboot.model.entity.Address">
        update address
        set uuid          = #{uuid,jdbcType=VARCHAR},
            create_at     = #{createAt,jdbcType=TIMESTAMP},
            update_at     = #{updateAt,jdbcType=TIMESTAMP},
            user_id       = #{userId,jdbcType=BIGINT},
            receiver      = #{receiver,jdbcType=VARCHAR},
            contact       = #{contact,jdbcType=VARCHAR},
            province_code = #{provinceCode,jdbcType=VARCHAR},
            city_code     = #{cityCode,jdbcType=VARCHAR},
            county_code   = #{countyCode,jdbcType=VARCHAR},
            address       = #{address,jdbcType=VARCHAR},
            postal_code   = #{postalCode,jdbcType=VARCHAR},
            address_tags  = #{addressTags,jdbcType=VARCHAR},
            is_default    = #{isDefault,jdbcType=TINYINT},
            full_location = #{fullLocation,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>
    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from address
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
</mapper>